---
#
# Copyright 2014 Major Hayden
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
#

  - name: 9.1.2 Verify Permissions on /etc/passwd (Scored)
    file: >
      path=/etc/passwd
      mode=0644
    tags:
      - scored
      - section9.1
      - section9.1.2

  - name: 9.1.3 Verify Permissions on /etc/shadow (Scored)
    file: >
      path=/etc/shadow
      mode=0000
    tags:
      - scored
      - section9.1
      - section9.1.3

  - name: 9.1.4 Verify Permissions on /etc/gshadow (Scored)
    file: >
      path=/etc/gshadow
      mode=0000
    tags:
      - scored
      - section9.1
      - section9.1.4

  - name: 9.1.5 Verify Permissions on /etc/group (Scored)
    file: >
      path=/etc/group
      mode=0644
    tags:
      - scored
      - section9.1
      - section9.1.5

  - name: 9.1.6 Verify User/Group Ownership on /etc/passwd (Scored)
    file: >
      path=/etc/passwd
      owner=root
      group=root
    tags:
      - scored
      - section9.1
      - section9.1.6

  - name: 9.1.7 Verify User/Group Ownership on /etc/shadow (Scored)
    file: >
      path=/etc/shadow
      owner=root
      group=root
    tags:
      - scored
      - section9.1
      - section9.1.7

  - name: 9.1.8 Verify User/Group Ownership on /etc/gshadow (Scored)
    file: >
      path=/etc/gshadow
      owner=root
      group=root
    tags:
      - scored
      - section9.1
      - section9.1.8

  - name: 9.1.9 Verify User/Group Ownership on /etc/group (Scored)
    file: >
      path=/etc/group
      owner=root
      group=root
    tags:
      - scored
      - section9.1
      - section9.1.9

  - name: 9.1.10 Find World Writable Files (Not Scored)
    shell: "df --local -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -type f -perm -0002"
    when: verify_find
    tags:
      - notscored
      - section9.1
      - section9.1.10

  - name: 9.1.11 Find Un-owned Files and Directories (Scored)
    shell: "df --local -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -nouser -ls"
    when: verify_find
    tags:
      - scored
      - section9.1
      - section9.1.11

  - name: 9.1.12 Find Un-grouped Files and Directories (Scored)
    shell: "df --local -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -nogroup -ls"
    when: verify_find
    tags:
      - scored
      - section9.1
      - section9.1.12

  - name: 9.1.13 Find SUID System Executables (Not Scored)
    shell: '/bin/rpm -V `/bin/rpm -qf /usr/bin/sudo`'
    register: suid
    when: verify_rpm
    tags:
      - notscored
      - section9.1
      - section9.1.13

  - name: 9.1.14 Find SGID System Executables (Not Scored)
    shell: '/bin/rpm -V `/bin/rpm -qf /usr/bin/sudo`'
    register: sgid
    when: verify_rpm
    tags:
      - notscored
      - section9.1
      - section9.1.14

  - name: 9.2.1 Ensure Password Fields are Not Empty (Scored)
    shell: /bin/cat /etc/shadow | /bin/awk -F':' '($2 == "" ) { print $1 " does not have a password "}'
    register: result9_2_1
    changed_when: "result9_2_1.stdout"
    always_run: yes
    tags:
      - scored
      - section9.2
      - section9.2.1

  - name: 9.2.2 Verify No Legacy "+" Entries Exist in /etc/passwd File (Scored)
    shell: /bin/grep '^+:' /etc/passwd
    register: result9_2_2
    failed_when: result9_2_2.rc == 0
    changed_when: result9_2_2.rc == 0
    always_run: yes
    ignore_errors: yes
    tags:
      - scored
      - section9.2
      - section9.2.2

  - name: 9.2.3 Verify No Legacy "+" Entries Exist in /etc/shadow File (Scored)
    shell: /bin/grep '^+:' /etc/shadow
    register: result9_2_3
    failed_when: result9_2_3.rc == 0
    changed_when: result9_2_3.rc == 0
    always_run: yes
    ignore_errors: yes
    tags:
      - scored
      - section9.2
      - section9.2.3

  - name: 9.2.4 Verify No Legacy "+" Entries Exist in /etc/group File (Scored)
    shell: /bin/grep '^+:' /etc/group
    register: result9_2_4
    failed_when: result9_2_4.rc == 0
    changed_when: result9_2_4.rc == 0
    always_run: yes
    ignore_errors: yes
    tags:
      - scored
      - section9.2
      - section9.2.4

  - name: 9.2.5 Verify No UID 0 Accounts Exist Other Than root (Scored)
    shell: /bin/awk -F':' '($3 == 0) { print $1 }' /etc/passwd | grep -qx 'root'
    register: result9_2_5
    failed_when: result9_2_5.rc != 0
    changed_when: result9_2_5.rc != 0
    always_run: yes
    ignore_errors: yes
    tags:
      - scored
      - section9.2
      - section9.2.5

  - name: 9.2.6 Ensure root PATH Integrity (Scored)
    debug: msg="*** To do later"
    tags:
      - scored
      - section9.2
      - section9.2.6

  - name: 9.2.7 Check Permissions on User Home Directories (Scored)
    debug: msg="*** To do later"
    tags:
      - scored
      - section9.2
      - section9.2.7

  - name: 9.2.8 Check User Dot File Permissions (Scored)
    debug: msg="*** To do later"
    tags:
      - scored
      - section9.2
      - section9.2.8

  - name: 9.2.9 Check Permissions on User .netrc Files (Scored)
    debug: msg="*** To do later"
    tags:
      - scored
      - section9.2
      - section9.2.9

  - name: 9.2.10 Check for Presence of User .rhosts Files (Scored)
    debug: msg="*** To do later"
    tags:
      - scored
      - section9.2
      - section9.2.10

  - name: 9.2.11 Check Groups in /etc/passwd (Scored)
    debug: msg="*** To do later"
    tags:
      - scored
      - section9.2
      - section9.2.11

  - name: 9.2.12 Check That Users Are Assigned Valid Home Directories (Scored)
    debug: msg="*** To do later"
    tags:
      - scored
      - section9.2
      - section9.2.12

  - name: 9.2.13 Check User Home Directory Ownership (Scored)
    debug: msg="*** To do later"
    tags:
      - scored
      - section9.2
      - section9.2.13

  - name: 9.2.14 Check for Duplicate UIDs (Scored)
    debug: msg="*** To do later"
    tags:
      - scored
      - section9.2
      - section9.2.14

  - name: 9.2.15 Check for Duplicate GIDs (Scored)
    shell: for dupeID in  $(cut -f3 -d":" /etc/group | sort | uniq -c | sort -n | awk ' $1 > 1 {print $2}'); do awk -F':' -v dupeid=$dupeID '$3 == dupeid {print $1}' /etc/group   ; done
    register: result9_2_15
    changed_when: "result9_2_15.stdout"
    always_run: yes
    tags:
      - scored
      - check-only
      - section9.2
      - section9.2.15

  - name: 9.2.16 Check for Duplicate User Names (Scored)
    shell: cut -f1 -d':' /etc/passwd | sort | uniq -c | sort -n | awk ' $1 > 1 {print $2}'
    register: result9_2_16
    changed_when: "result9_2_16.stdout"
    always_run: yes
    tags:
      - scored
      - check-only
      - section9.2
      - section9.2.16

  - name: 9.2.17 Check for Duplicate Group Names (Scored)
    shell: cut -f1 -d':' /etc/group | sort | uniq -c | sort -n | awk ' $1 > 1 {print $2}'
    register: result9_2_17
    changed_when: "result9_2_17.stdout"
    always_run: yes
    tags:
      - scored
      - check-only
      - section9.2
      - section9.2.17

  - name: 9.2.18 Check for Presence of User .netrc Files (Scored)
    shell:  for h in $(/bin/awk -F':' '$7 !~ /\/sbin\/nologin/ && $7 !~ /\/bin\/false/ { print $6 }' /etc/passwd); do if [[ -f $h/.netrc && -s $h/.netrc ]]; then echo $h; fi ; done
    register: result9_2_18
    changed_when: "result9_2_18.stdout"
    always_run: yes
    tags:
      - scored
      - check-only
      - section9.2
      - section9.2.18

  - name: 9.2.19 Check for Presence of User .forward Files (Scored)
    shell:  for h in $(/bin/awk -F':' '$7 !~ /\/sbin\/nologin/ && $7 !~ /\/bin\/false/ { print $6 }' /etc/passwd); do if [[ -f $h/.forward && -s $h/.forward ]]; then echo $h; fi ; done
    register: result9_2_19
    changed_when: "result9_2_19.stdout"
    always_run: yes
    tags:
      - scored
      - check-only
      - section9.2
      - section9.2.19

#  - debug: var=result9_2_19.stdout
#    tags:
#      - section9.2.19
